<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Scott Tactical </title>
    <link>http://scotttactical.com/tags/devops/</link>
    <language>en-us</language>
    <author>Scott Tactical</author>
    <rights>(C) 2016</rights>
    <updated>2016-10-28 20:07:57 -0700 PDT</updated>

    
      
        <item>
          <title>Why We Quit OpenStack: or How I Lost 2 Months of My Life</title>
          <link>http://scotttactical.com/why-we-quit-openstack</link>
          <pubDate>Fri, 28 Oct 2016 20:07:57 PDT</pubDate>
          <author>Scott Tactical</author>
          <guid>http://scotttactical.com/why-we-quit-openstack</guid>
          <description>

&lt;h2 id=&#34;backstory:b85c7312ab9bb2e49c842e2b5c6f0ec6&#34;&gt;Backstory&lt;/h2&gt;

&lt;p&gt;Let me begin by saying that given the proper talent pool, financial resources, and time; OpenStack probably isn&amp;rsquo;t bad for some people. For most institutions it is just &lt;em&gt;wrong&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;I will probably write another article that outlines all the questions that I should have asked before starting this. My assumptions were not all quite there, but I did have a sneaking suspicion given a couple very relevant experiences.&lt;/p&gt;

&lt;p&gt;Several people asked me about a way to do big data(ish) at an affordable price. I enjoy owning hardware and infrastructure and from a business perspective that is a fairly decent endeavor in terms of static equity. I was bored with coding. The two of those items intersected and I decided to take on the task of bringing in some data clients and see if I could beat the services of other competitors and give them a better experience.&lt;/p&gt;

&lt;p&gt;Disclosure: This site is currently running on our openstack deployment in &lt;a href=&#34;http://dtac.io&#34;&gt;DTAC&amp;rsquo;s&lt;/a&gt; private cloud&lt;/p&gt;

&lt;p&gt;.
.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://scotttactical.com/images/full_openstack.jpg&#34; alt=&#34;Full OpenStack&#34; /&gt;&lt;/p&gt;

&lt;h1 id=&#34;cloud-red-flags:b85c7312ab9bb2e49c842e2b5c6f0ec6&#34;&gt;Cloud Red Flags&lt;/h1&gt;

&lt;blockquote&gt;
&lt;p&gt;Where there are &lt;em&gt;clouds&lt;/em&gt; of smoke, there is probably fire. - An Indian Truism&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&#34;it-took-forever:b85c7312ab9bb2e49c842e2b5c6f0ec6&#34;&gt;It Took Forever&lt;/h2&gt;

&lt;p&gt;I witnessed an ambitious project slide face-first into the blue and white parking stall of the private cloud mall. Then later used as leverage out every participant. I mostly attributed the breakdown to lack of time resources, OS talent and political infighting.  &lt;em&gt;nerds (heart) aws&lt;/em&gt; but more on that elsewhere.  Given those red flags I figured my sysadmin abilities would be able to figure things out and surpass them.&lt;/p&gt;

&lt;p&gt;The project took the best part of a year and I don&amp;rsquo;t think was every really fully consuming of all the infrastructures.&lt;/p&gt;

&lt;p&gt;My response: I got sysadmin skills and no politics. I&amp;rsquo;ve never not been able to raise a datacenter infrastructure.&lt;/p&gt;

&lt;h2 id=&#34;openstack-hate-speech:b85c7312ab9bb2e49c842e2b5c6f0ec6&#34;&gt;OpenStack Hate Speech&lt;/h2&gt;

&lt;p&gt;There was plenty of hating over OpenStack. More specifically there was a lot of negative commentary about Nova, Neutron and Cinder. Basically the heart of the application.&lt;/p&gt;

&lt;p&gt;My response: I kinda need those bells and whistles so it&amp;rsquo;s worth dealing with monolithic bloat because that&amp;rsquo;s my only option.&lt;/p&gt;

&lt;h2 id=&#34;nerds-heart-aws:b85c7312ab9bb2e49c842e2b5c6f0ec6&#34;&gt;Nerds (heart) AWS&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;When there is blood in the streets, buy land. - Contrarian Invetors&amp;rsquo; Proverb&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Searching for OpenStack talent was like looking for unbias political trends on twitter. It just ain&amp;rsquo;t there.  Techs not only didn&amp;rsquo;t know it well, but most applicants that had it on their resumes didn&amp;rsquo;t want to want to deploy it. Out of every 50 consultant I talked with about private cloud work, 49 said they could help me set up with Amazon AW$.  It is entirely confusing to ask someone to help you with your private cloud and they offer to help what is essentially a competitor.&lt;/p&gt;

&lt;p&gt;A side note: Most tech professionals also said they were getting a &amp;ldquo;great deal&amp;rdquo; at Amazon. No financial officer I talked to shared this sentiment. Food for thought.&lt;/p&gt;

&lt;p&gt;My response: Well most nerds have near-0 business strategy. Also this indicates there is a massive gap in talent so I&amp;rsquo;d like to be here.&lt;/p&gt;

&lt;h2 id=&#34;babylon-fortuna-ergo-enterprise-ready:b85c7312ab9bb2e49c842e2b5c6f0ec6&#34;&gt;Babylon Fortuna ergo Enterprise-Ready&lt;/h2&gt;

&lt;p&gt;The codebase is huge. And kinda old at this point. In internet years it&amp;rsquo;s about 50 years old.&lt;/p&gt;

&lt;p&gt;My response: It is mature enough to use. I should be ashamed of myself. I deployed IBM Websphere and should have known better.&lt;/p&gt;

&lt;h2 id=&#34;it-is-complicated:b85c7312ab9bb2e49c842e2b5c6f0ec6&#34;&gt;It is Complicated&lt;/h2&gt;

&lt;p&gt;&lt;img src=&#34;http://scotttactical.com/images/fb_complicated.png&#34; alt=&#34;It&#39;s Complicated&#34; /&gt;&lt;/p&gt;

&lt;p&gt;Look at the diagram. Seriously Siri WHERE IS MY CAR!?!?!&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://docs.openstack.org/icehouse/training-guides/content/figures/5/a/figures/openstack-arch-havana-logical-v1.jpg&#34; alt=&#34;OpenStack&#34; /&gt;&lt;/p&gt;

&lt;p&gt;BTW this image is taken from the OpenStack &amp;ldquo;Getting Started&amp;rdquo; section.&lt;/p&gt;

&lt;p&gt;My response: Well, shit. Guess I&amp;rsquo;ve dealt with worse. I hope there isn&amp;rsquo;t magic happening. I&amp;rsquo;ll trust the Fuel installers.&lt;/p&gt;

&lt;h2 id=&#34;it-is-fragile:b85c7312ab9bb2e49c842e2b5c6f0ec6&#34;&gt;It Is Fragile&lt;/h2&gt;

&lt;p&gt;Refer to the previous diagram. With so many moving parts and given the lack of talent capable of managing it there is a serious level of risk in trusting a critical production environment on this.&lt;/p&gt;

&lt;p&gt;My response: Keep my public cloud fail overs built and ready to deploy. I&amp;rsquo;m a cheat.&lt;/p&gt;

&lt;h2 id=&#34;it-is-vendor-driven:b85c7312ab9bb2e49c842e2b5c6f0ec6&#34;&gt;It Is Vendor Driven&lt;/h2&gt;

&lt;p&gt;I kinda knew that the growth of OpenStack was tainted by vendor intrigue. I have run into this spending a considerable amount of time working with OAuth 2.0 when the &amp;ldquo;framework&amp;rdquo; was going through proprosals and the lead writers were walking off.&lt;/p&gt;

&lt;p&gt;Cite: &lt;a href=&#34;https://www.openstack.org/summit/vancouver-2015/summit-videos/presentation/openstack-is-doomed-and-it-is-your-fault&#34;&gt;OpenStack is Doomed - Andy (termie) Smith&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;My response: Ick&lt;/p&gt;

&lt;h1 id=&#34;the-final-decision:b85c7312ab9bb2e49c842e2b5c6f0ec6&#34;&gt;The Final Decision&lt;/h1&gt;

&lt;p&gt;While it might work for a team like RackSpace, I don&amp;rsquo;t think it fits what we need. The cost benefit of having a few drivers and some prebuilt scripts to managing images wasn&amp;rsquo;t enough to justify the cost and risk of having a system that is so fragile.&lt;/p&gt;

&lt;p&gt;The risk and the knowns of unknowns inside the massive spaghetti of scope creep was enough that I couldn&amp;rsquo;t justify that I wouldn&amp;rsquo;t be able to jump in and fix something within less than a day. Pretty much every code fix I had to make took more than a day. More of 3-5 days to figure out each bug.&lt;/p&gt;

&lt;h2 id=&#34;opennebula:b85c7312ab9bb2e49c842e2b5c6f0ec6&#34;&gt;OpenNebula&lt;/h2&gt;

&lt;p&gt;We tried other stacks and I launched a multiple node infrastructure with OpenNebula. It was refreshingly vertical and self-contained. But still felt like it wanted to follow the hypervisor slipstream of OpenStack.&lt;/p&gt;

&lt;h2 id=&#34;blah-stack:b85c7312ab9bb2e49c842e2b5c6f0ec6&#34;&gt;Blah-Stack&lt;/h2&gt;

&lt;p&gt;There was a lot of other options but I was burned out at this point.&lt;/p&gt;

&lt;h1 id=&#34;conclusion:b85c7312ab9bb2e49c842e2b5c6f0ec6&#34;&gt;Conclusion&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;There is no free ride. (Development is an Expect to Work Employment)&lt;/li&gt;
&lt;li&gt;Swiss army knives suck for self-defense and bayonets&lt;/li&gt;
&lt;li&gt;Don&amp;rsquo;t expect to launch a cloud out of the box that will fit your business needs&lt;/li&gt;
&lt;li&gt;If you believe the marketing - baaah&lt;/li&gt;
&lt;li&gt;Community first, politics last&lt;/li&gt;
&lt;/ul&gt;
</description>
        </item>
      
    
      
        <item>
          <title>Download an Entire Site with wget - mac OSX</title>
          <link>http://scotttactical.com/download-an-entire-site-with-wget-mac-osx/</link>
          <pubDate>Mon, 21 Sep 2015 00:00:00 UTC</pubDate>
          <author>Scott Tactical</author>
          <guid>http://scotttactical.com/download-an-entire-site-with-wget-mac-osx/</guid>
          <description>

&lt;h1 id=&#34;download-the-entire-site-with-wget:967adfa691414a6b957a247770983398&#34;&gt;Download the Entire Site with wget&lt;/h1&gt;

&lt;p&gt;If you don&amp;rsquo;t have &lt;a href=&#34;http://brew.sh/&#34;&gt;homebrew&lt;/a&gt; please install it. It will make all our lives easier.&lt;/p&gt;

&lt;h2 id=&#34;howto:967adfa691414a6b957a247770983398&#34;&gt;Howto&lt;/h2&gt;

&lt;p&gt;This was kinda simple but I wanted to post it here for reference.&lt;/p&gt;

&lt;p&gt;On thing I would like to note is the wait and limit-rate. Make sure you don&amp;rsquo;t trip any throttles or piss off any website owners by leaving the pipes wide open.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;wget \
     --recursive \
     --no-clobber \
     --page-requisites \
     --convert-links \
     --wait=5 --limit-rate=20K \
     --domains api.yoursite.com \
     --no-parent \
         http://api.yoursite.com/
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Alternate you can run the mirror command&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;wget -m --wait=5 http://test.com
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;I am sure one can use lynx but this is what I like. And it&amp;rsquo;s handy on the mac.&lt;/p&gt;
</description>
        </item>
      
    
      
        <item>
          <title>Force HTTPS on Laravel 5 behind AWS ELB on EC2</title>
          <link>http://scotttactical.com/force-https-on-laravel-5-aws-elb-on-ec2/</link>
          <pubDate>Wed, 16 Sep 2015 00:00:00 UTC</pubDate>
          <author>Scott Tactical</author>
          <guid>http://scotttactical.com/force-https-on-laravel-5-aws-elb-on-ec2/</guid>
          <description>

&lt;h1 id=&#34;laravel-5-enforcing-https:03bc7a7611150669b29f3c91e572d932&#34;&gt;Laravel 5 - Enforcing HTTPS&lt;/h1&gt;

&lt;p&gt;I&amp;rsquo;ve used a lot of frameworks. &lt;a href=&#34;http://laravel.com/&#34;&gt;Laravel is great&lt;/a&gt;.&lt;/p&gt;

&lt;h2 id=&#34;dealing-with-a-load-balancer:03bc7a7611150669b29f3c91e572d932&#34;&gt;Dealing with a load balancer&lt;/h2&gt;

&lt;p&gt;Most of us are on a scaled service and most of us need HTTPS. It is much easier to put the SSL certificate on the load balancer and then proxy the request over port 80 to the actual server. It saves on CPU processes as well since the decryption work doesn&amp;rsquo;t have to be performed on the slave boxes.&lt;/p&gt;

&lt;p&gt;If you do not handle the redirect properly and just look for port 443 then you will get yourself into a &lt;strong&gt;redirection loop&lt;/strong&gt;. That is annoying because if you don&amp;rsquo;t test under an SSL you will deploy to production and then have to tell you boss why you&amp;rsquo;re loopy. Amazon is kind of a pain for this.&lt;/p&gt;

&lt;h2 id=&#34;aws-elb-proxy-headers:03bc7a7611150669b29f3c91e572d932&#34;&gt;AWS ELB Proxy Headers&lt;/h2&gt;

&lt;p&gt;Make sure you know what the request looks like to the accepting server.&lt;/p&gt;

&lt;p&gt;This header is going to be passed over:&lt;/p&gt;

&lt;p&gt;&lt;code&gt;HTTP_X_FORWARDED_PROTO&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;The problem with just looking for this and accepting your solution based on this is that header can be forged trivially. You need to make sure you are only acknowledging that header from trusted sources.&lt;/p&gt;

&lt;h2 id=&#34;setting-the-redirect:03bc7a7611150669b29f3c91e572d932&#34;&gt;Setting the Redirect&lt;/h2&gt;

&lt;p&gt;I went ahead and installed &lt;a href=&#34;https://github.com/fideloper/TrustedProxy&#34; title=&#34;Laravel Trusted Proxies&#34; target=&#34;_blank&#34;&gt;Laravel Trusted Proxies&lt;/a&gt; from &lt;a href=&#34;https://github.com/fideloper&#34; title=&#34;Chris Fideo&#34; target=&#34;_blank&#34;&gt;Chris Fideo&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Follow his instructions. It&amp;rsquo;s pretty straight forward. Here is what my `config/trustedproxy.php` looks like.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-php&#34;&gt;&#39;proxies&#39; =&amp;amp;gt; [
    &#39;172.31.0.0/16&#39;,
],
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;I knew after looking at my logs where my health checks were coming from:`ELB-HealthChecker/1.0`&lt;/p&gt;

&lt;p&gt;I figured if I just allow everything in that B block that I should be okay.&lt;/p&gt;

&lt;p&gt;Also set the proper header to look for.&lt;/p&gt;

&lt;p&gt;NOTE: I lost a couple hours trying to figure out why it wouldn&amp;rsquo;t match. Read the docblock above it. It strips HTTP_  &lt;img src=&#34;http://scotttactical.com/wp-includes/images/smilies/frownie.png&#34; alt=&#34;:(&#34; class=&#34;wp-smiley&#34; style=&#34;height: 1em; max-height: 1em;&#34; /&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-php&#34;&gt;&#39;headers&#39; =&amp;amp;gt; [
        \Illuminate\Http\Request::HEADER_CLIENT_IP    =&amp;amp;gt; &#39;X_FORWARDED_FOR&#39;,
        \Illuminate\Http\Request::HEADER_CLIENT_HOST  =&amp;amp;gt; &#39;FORWARDED_HOST&#39;,
        \Illuminate\Http\Request::HEADER_CLIENT_PROTO =&amp;amp;gt; &#39;X_FORWARDED_PROTO&#39;,
        \Illuminate\Http\Request::HEADER_CLIENT_PORT  =&amp;amp;gt; &#39;X_FORWARDED_PORT&#39;,
    ]
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;add-to-laravel-middleware:03bc7a7611150669b29f3c91e572d932&#34;&gt;Add to Laravel Middleware&lt;/h2&gt;

&lt;p&gt;I created Secure.php and added it to app/Http/Middleware&lt;/p&gt;

&lt;p&gt;Thanks to the work from &lt;a href=&#34;https://gist.github.com/nblackburn/a66e8e93561e277996aa&#34; title=&#34;nblackburn&#34; target=&#34;_blank&#34;&gt;@nblackburn&lt;/a&gt;. That was highly appreciated.&lt;/p&gt;

&lt;p&gt;What was weird about my environment is I was getting in a redirection loop because it would prepend `public/` on the front of my uri. I&amp;rsquo;m running multiple environments so I didn&amp;rsquo;t have the luxury of pointing my root to that directory. I had to strip that off the front.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-php&#34;&gt;class Secure implements Middleware
{
    public function handle($request, Closure $next)
    {
        if (! $request-&amp;amp;gt;secure() &amp;amp;&amp;amp; app()-&amp;amp;gt;environment(&#39;production&#39;)) {

            // this is a really ugly hack but it kept looping and prepnding public
            return redirect()-&amp;amp;gt;secure(preg_replace(&#39;%/public%&#39;, &#39;&#39;, $request-&amp;amp;gt;getRequestUri()));
        }

        return $next($request);
    }
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Add it to your global middleware if you want it to run for all requests.&lt;/p&gt;

&lt;p&gt;Open up: app/Http/Kernel.php&lt;/p&gt;

&lt;p&gt;I added&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-php&#34;&gt;protected $middleware = [
	    ...		
		// trust the proxies from aws
		&#39;Fideloper\Proxy\TrustProxies&#39;,
		// then force it secure (if production)
		&#39;LeadFerret\Http\Middleware\Secure&#39;,
	];
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Now there are no more redirect loop hells.&lt;/p&gt;
</description>
        </item>
      
    

  </channel>
</rss>
