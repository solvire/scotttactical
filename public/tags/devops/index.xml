<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Devops on Scott Tactical</title>
    <link>http://scotttactical.com/tags/devops/</link>
    <description>Recent content in Devops on Scott Tactical</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>Copyright © 2014–2019, Scott Tactical; all rights reserved.</copyright>
    <lastBuildDate>Sat, 24 Dec 2016 06:41:07 -0800</lastBuildDate>
    
	<atom:link href="http://scotttactical.com/tags/devops/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Encrypt PostgreSQL Backup to S3</title>
      <link>http://scotttactical.com/post/encrypt-postgresql-backup-to-s3/</link>
      <pubDate>Sat, 24 Dec 2016 06:41:07 -0800</pubDate>
      
      <guid>http://scotttactical.com/post/encrypt-postgresql-backup-to-s3/</guid>
      <description>Encrypt Your DB Backups I&amp;rsquo;m mostly putting this here for my reference. I do this in multiple projects and always seem to forget where my instructions are.
Generate Keys From your user&amp;rsquo;s home directory:
openssl req -x509 -nodes -days 1000000 -newkey rsa:4096 -keyout .ssh/backup_key.pem -out .ssh/backup_key.pem.pub
Fill out the questions appropriately. Or not. I don&amp;rsquo;t think it matters really.
That will create the public and private keys.
backup_key.pem - private key backup_key.</description>
    </item>
    
    <item>
      <title>HowTo Bind Multiple Terminals MacOS-X</title>
      <link>http://scotttactical.com/post/howto-bind-multiple-terminals-macos-x/</link>
      <pubDate>Tue, 29 Nov 2016 19:09:21 -0800</pubDate>
      
      <guid>http://scotttactical.com/post/howto-bind-multiple-terminals-macos-x/</guid>
      <description>Binding Multiple Terminals I am running on multiple servers all the time. And with DTAC doing testing of big data I obviously need to play with many servers at once. I used to do a lot of work on linux and loved the broadcast ability of the terminals. So when I moved onto mac I expected more.
I tried a few other terminal apps. Particularly iTerm2 that has some nice broadcasting.</description>
    </item>
    
    <item>
      <title>Why We Quit OpenStack: or How I Lost 2 Months of My Life</title>
      <link>http://scotttactical.com/why-we-quit-openstack/</link>
      <pubDate>Fri, 28 Oct 2016 20:07:57 -0700</pubDate>
      
      <guid>http://scotttactical.com/why-we-quit-openstack/</guid>
      <description>TL;DR OpenStack is a massive complicated ecosystem. It is only going to survive by the vendors that support it and probably not what you need.
Backstory Let me begin by saying that given the proper talent pool, financial resources, and time; OpenStack probably isn&amp;rsquo;t bad for some people. For most institutions it is just wrong.
I will probably write another article that outlines all the questions that I should have asked before starting this.</description>
    </item>
    
    <item>
      <title>Download an Entire Site with wget - mac OSX</title>
      <link>http://scotttactical.com/download-an-entire-site-with-wget-mac-osx/</link>
      <pubDate>Mon, 21 Sep 2015 00:00:00 +0000</pubDate>
      
      <guid>http://scotttactical.com/download-an-entire-site-with-wget-mac-osx/</guid>
      <description>Download the Entire Site with wget If you don&amp;rsquo;t have homebrew please install it. It will make all our lives easier.
Howto This was kinda simple but I wanted to post it here for reference.
On thing I would like to note is the wait and limit-rate. Make sure you don&amp;rsquo;t trip any throttles or piss off any website owners by leaving the pipes wide open.
wget \ --recursive \ --no-clobber \ --page-requisites \ --convert-links \ --wait=5 --limit-rate=20K \ --domains api.</description>
    </item>
    
    <item>
      <title>Force HTTPS on Laravel 5 behind AWS ELB on EC2</title>
      <link>http://scotttactical.com/force-https-on-laravel-5-aws-elb-on-ec2/</link>
      <pubDate>Wed, 16 Sep 2015 00:00:00 +0000</pubDate>
      
      <guid>http://scotttactical.com/force-https-on-laravel-5-aws-elb-on-ec2/</guid>
      <description>Laravel 5 - Enforcing HTTPS I&amp;rsquo;ve used a lot of frameworks. Laravel is great.
Dealing with a load balancer Most of us are on a scaled service and most of us need HTTPS. It is much easier to put the SSL certificate on the load balancer and then proxy the request over port 80 to the actual server. It saves on CPU processes as well since the decryption work doesn&amp;rsquo;t have to be performed on the slave boxes.</description>
    </item>
    
  </channel>
</rss>