<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Scott Tactical </title>
    <link>http://scotttactical.com/tags/programming/</link>
    <language>en-us</language>
    <author>Scott Tactical</author>
    <rights>(C) 2015</rights>
    <updated>2015-10-22 06:29:31 -0700 PDT</updated>

    
      
        <item>
          <title>Deploying Hugo the Golang CMS on DigitalOcean - Nginx</title>
          <link>http://scotttactical.com/deploying-hugo-golang-digitalocean-nginx</link>
          <pubDate>Thu, 22 Oct 2015 06:29:31 PDT</pubDate>
          <author>Scott Tactical</author>
          <guid>http://scotttactical.com/deploying-hugo-golang-digitalocean-nginx</guid>
          <description>

&lt;h1 id=&#34;deploying-hugo-the-golang-cms-on-digitalocean:05ba16f4d070e50db8ed0ad9d587f7eb&#34;&gt;Deploying Hugo the Golang CMS on DigitalOcean&lt;/h1&gt;

&lt;h2 id=&#34;creating-a-droplet:05ba16f4d070e50db8ed0ad9d587f7eb&#34;&gt;Creating a Droplet&lt;/h2&gt;

&lt;p&gt;I am a bit partial to CentOS. The lastest version as of this writing is &lt;em&gt;CentOS Linux release 7.1.1503 (Core)&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;Setting up a droplet is always very simple. Just turn it on basically. Upload your ssh keys. Done.&lt;/p&gt;

&lt;h2 id=&#34;install-nginx:05ba16f4d070e50db8ed0ad9d587f7eb&#34;&gt;Install Nginx&lt;/h2&gt;

&lt;h3 id=&#34;add-the-epel-repo:05ba16f4d070e50db8ed0ad9d587f7eb&#34;&gt;Add the epel repo:&lt;/h3&gt;

&lt;pre&gt;&lt;code&gt;yum install epel-release
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;install:05ba16f4d070e50db8ed0ad9d587f7eb&#34;&gt;Install&lt;/h3&gt;

&lt;pre&gt;&lt;code&gt;yum install nginx
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;start-it:05ba16f4d070e50db8ed0ad9d587f7eb&#34;&gt;Start it&lt;/h3&gt;

&lt;pre&gt;&lt;code&gt;service nginx start
systemctl enable nginx
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;create-the-folders:05ba16f4d070e50db8ed0ad9d587f7eb&#34;&gt;Create the Folders&lt;/h3&gt;

&lt;pre&gt;&lt;code&gt;mkdir -p /var/www/ursite/
chown -R nginx:nginx /var/www
touch /var/www/ursite/index.html - or clone your site
cp /etc/nginx/sites-available/default /etc/nginx/sites-available/ursite
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;configure-nginx:05ba16f4d070e50db8ed0ad9d587f7eb&#34;&gt;Configure nginx&lt;/h3&gt;

&lt;p&gt;open the config file: &lt;code&gt;vim /etc/nginx/conf.d/virtual.conf&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Add the following:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-conf&#34;&gt;#
# A virtual host using mix of IP-, name-, and port-based configuration
#

server {
    listen       80;
    server_name  scotttactical.com;
    server_alias go.scotttactical.com;

    location / {
        root   /var/www/stac/public/;
        index  index.html;
    }
}
&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&#34;install-go-hugo:05ba16f4d070e50db8ed0ad9d587f7eb&#34;&gt;Install  Go + Hugo&lt;/h4&gt;

&lt;pre&gt;&lt;code&gt;yum install go
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;I decided to install from source
Edit your bash script to have the proper variables in place.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;yum install git hg
export GOPATH=$HOME/go
go get -v github.com/spf13/hugo
cp $GOPATH/bin/hugo /usr/local/bin/
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;NOTE: THis actually isn&amp;rsquo;t necessary.  Just check it out and go with it. Afer screwing with it a few minutes I facepalmed&amp;hellip; they are static files. Doh!&lt;/p&gt;
</description>
        </item>
      
    
      
        <item>
          <title>To HipHop or Not - PHP and HHVM</title>
          <link>http://scotttactical.com/to-hiphop-or-not-php-hhvm/</link>
          <pubDate>Wed, 18 Feb 2015 00:00:00 UTC</pubDate>
          <author>Scott Tactical</author>
          <guid>http://scotttactical.com/to-hiphop-or-not-php-hhvm/</guid>
          <description>

&lt;p&gt;We are discussing the plausibility of using HHVM inside this current infrastructure.&lt;/p&gt;

&lt;p&gt;Our requirements are not very application server CPU intensive so it isn&amp;rsquo;t immediately apparent why this would be beneficial, but for investigations sake I wanted to go through the diligence.&lt;/p&gt;

&lt;h2 id=&#34;short-history:64521b042c2931bf82be49be9d2c6916&#34;&gt;Short History&lt;/h2&gt;

&lt;p&gt;&lt;img src=&#34;http://hhvm.com/&#34; alt=&#34;HHVM&#34; /&gt;&lt;/p&gt;

&lt;p&gt;Facebook, our Ominous big brother gave us a consolation prize for freely giving away just about all that most people have online that has any value: their personal information. On the topic of sheeple for another day. For today, we thank you Facebook. May your stock price soar to the stars.&lt;/p&gt;

&lt;p&gt;I wanted to know what the differences between &lt;a href=&#34;https://en.wikipedia.org/wiki/HipHop_Virtual_Machine&#34;&gt;HHVM&lt;/a&gt; and HipHop Orig was if there was any. HPHPc was the original source to source compiler that converted to C++. There were a lot of inherent problems there and the team later decided to switch tracks and make a JIT virtual machine instead: more formally [HipHop Virtual Machine] known as HHVM. I personally like this approach much better due to the portability. At some point I&amp;rsquo;ll write about my romance with the idea of compiling in tools for &lt;a href=&#34;https://en.wikipedia.org/wiki/Aspect-oriented_programming&#34;&gt;AOP - Aspect Oriented Programming&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Interestingly enough VKontakt is coding their own translator right along side Facebook. &lt;a href=&#34;https://en.wikipedia.org/wiki/KPHP&#34;&gt;KPHP&lt;/a&gt;. I guess old international habits die slowly.&lt;/p&gt;

&lt;h3 id=&#34;hack-programming-language:64521b042c2931bf82be49be9d2c6916&#34;&gt;Hack (programming language)&lt;/h3&gt;

&lt;p&gt;One of the best things I think this paradigm added is the enhanced &lt;a href=&#34;https://en.wikipedia.org/wiki/Hack_%28programming_language%29&#34;&gt;Hack&lt;/a&gt; programming language. It gave PHP a static or dynamic type syntax. For those who complain about PHP&amp;rsquo;s loose typing, well here you go.&lt;/p&gt;

&lt;h2 id=&#34;benefits:64521b042c2931bf82be49be9d2c6916&#34;&gt;Benefits&lt;/h2&gt;

&lt;p&gt;What are the benefits to having HipHop in place?&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Performance&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;That is about the only noteworthy thing I can see. Having Hack around is nice, but my guys are not going to change any time soon to use this. PHP is built to be phast and loose. Fast as in &amp;ldquo;can you have this ready today&amp;rdquo; sadly. I&amp;rsquo;d rather have things up and running fast and deal with standards at the QA/unit test layer. Working with the majority of the code being legacy negates the benefit also.&lt;/p&gt;

&lt;h2 id=&#34;our-stack:64521b042c2931bf82be49be9d2c6916&#34;&gt;Our stack&lt;/h2&gt;

&lt;p&gt;Right now it&amp;rsquo;s so vanilla that it is disgusting.&lt;/p&gt;

&lt;p&gt;Ubuntu in AWS&lt;/p&gt;

&lt;p&gt;PHP 5.5.x&lt;/p&gt;

&lt;p&gt;Mysql 5.6&lt;/p&gt;

&lt;p&gt;Home strung framework&lt;/p&gt;

&lt;p&gt;Laravel integrated&lt;/p&gt;

&lt;p&gt;Memcached&lt;/p&gt;

&lt;p&gt;Loaded Modules:&lt;/p&gt;

&lt;p&gt;Core&lt;/p&gt;

&lt;p&gt;date&lt;/p&gt;

&lt;p&gt;ereg&lt;/p&gt;

&lt;p&gt;libxml&lt;/p&gt;

&lt;p&gt;openssl&lt;/p&gt;

&lt;p&gt;pcre&lt;/p&gt;

&lt;p&gt;zlib&lt;/p&gt;

&lt;p&gt;bcmath&lt;/p&gt;

&lt;p&gt;bz2&lt;/p&gt;

&lt;p&gt;calendar&lt;/p&gt;

&lt;p&gt;ctype&lt;/p&gt;

&lt;p&gt;dba&lt;/p&gt;

&lt;p&gt;dom&lt;/p&gt;

&lt;p&gt;hash&lt;/p&gt;

&lt;p&gt;fileinfo&lt;/p&gt;

&lt;p&gt;filter&lt;/p&gt;

&lt;p&gt;ftp&lt;/p&gt;

&lt;p&gt;gettext&lt;/p&gt;

&lt;p&gt;SPL&lt;/p&gt;

&lt;p&gt;iconv&lt;/p&gt;

&lt;p&gt;mbstring&lt;/p&gt;

&lt;p&gt;pcntl&lt;/p&gt;

&lt;p&gt;session&lt;/p&gt;

&lt;p&gt;posix&lt;/p&gt;

&lt;p&gt;Reflection&lt;/p&gt;

&lt;p&gt;standard&lt;/p&gt;

&lt;p&gt;shmop&lt;/p&gt;

&lt;p&gt;SimpleXML&lt;/p&gt;

&lt;p&gt;soap&lt;/p&gt;

&lt;p&gt;sockets&lt;/p&gt;

&lt;p&gt;Phar&lt;/p&gt;

&lt;p&gt;exif&lt;/p&gt;

&lt;p&gt;sysvmsg&lt;/p&gt;

&lt;p&gt;sysvsem&lt;/p&gt;

&lt;p&gt;sysvshm&lt;/p&gt;

&lt;p&gt;tokenizer&lt;/p&gt;

&lt;p&gt;wddx&lt;/p&gt;

&lt;p&gt;xml&lt;/p&gt;

&lt;p&gt;xmlreader&lt;/p&gt;

&lt;p&gt;xmlwriter&lt;/p&gt;

&lt;p&gt;zip&lt;/p&gt;

&lt;p&gt;PDO&lt;/p&gt;

&lt;p&gt;apcu&lt;/p&gt;

&lt;p&gt;curl&lt;/p&gt;

&lt;p&gt;gd&lt;/p&gt;

&lt;p&gt;intl&lt;/p&gt;

&lt;p&gt;json&lt;/p&gt;

&lt;p&gt;mcrypt&lt;/p&gt;

&lt;p&gt;memcached&lt;/p&gt;

&lt;p&gt;mysql&lt;/p&gt;

&lt;p&gt;mysqli&lt;/p&gt;

&lt;p&gt;pdo_mysql&lt;/p&gt;

&lt;p&gt;readline&lt;/p&gt;

&lt;p&gt;redis&lt;/p&gt;

&lt;p&gt;xmlrpc&lt;/p&gt;

&lt;p&gt;mhash&lt;/p&gt;

&lt;p&gt;apc&lt;/p&gt;

&lt;p&gt;ZendOPcache&lt;/p&gt;

&lt;h2 id=&#34;next-steps:64521b042c2931bf82be49be9d2c6916&#34;&gt;Next Steps&lt;/h2&gt;

&lt;p&gt;I will be doing some performance tests coming up IF we are able to get this into play.&lt;/p&gt;

&lt;p&gt;My plan is to run load test against our normal branch and then&lt;/p&gt;
</description>
        </item>
      
    

  </channel>
</rss>
