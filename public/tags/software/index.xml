<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Scott Tactical </title>
    <link>http://scotttactical.com/tags/software/</link>
    <language>en-us</language>
    <author>Scott Tactical</author>
    <rights>(C) 2015</rights>
    <updated>2015-12-01 10:43:58 -0800 PST</updated>

    
      
        <item>
          <title>Try Not 2 Fuck Up Ur Engineering</title>
          <link>http://scotttactical.com/try-not-2-fuck-up-ur-engineering/</link>
          <pubDate>Tue, 01 Dec 2015 10:43:58 PST</pubDate>
          <author>Scott Tactical</author>
          <guid>http://scotttactical.com/try-not-2-fuck-up-ur-engineering/</guid>
          <description>

&lt;p&gt;Leadership Checklist for Non-Technical Managers&lt;/p&gt;

&lt;p&gt;How do you build software that provides value to both clients, owners and engineers?&lt;/p&gt;

&lt;p&gt;This list has started as a list of notes that I kept over the last few years. Yes, this is the abbreviated version of &lt;a href=&#34;http://scotttactical.com/management-for-quality-software-development/&#34;&gt;Management For Quality Software&lt;/a&gt;.&lt;/p&gt;

&lt;h1 id=&#34;executive-leadership:b95f08065f33835f1988c422d37af806&#34;&gt;Executive Leadership&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;Bloated and ugly products start at the top and only the resources for good engineering begin there&lt;/li&gt;
&lt;li&gt;The three ways business leaders can add value is with &lt;span class=&#34;T2&#34;&gt;numbers, numbers, numbers&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;Put your name on the product&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;the-business-requirement:b95f08065f33835f1988c422d37af806&#34;&gt;The Business Requirement&lt;/h2&gt;

&lt;p&gt;Write a business requirement that reflects specific details about a problem that the business is solving based on market research numbers. A full description is beyond this terse scope.&lt;/p&gt;

&lt;h2 id=&#34;feature-requests-r-bad:b95f08065f33835f1988c422d37af806&#34;&gt;Feature Requests R Bad&lt;/h2&gt;

&lt;p&gt;I know you really want to. You think you know UI design and are well versed in using a browser. In reality you probably suck at engineering/UI/art.&lt;/p&gt;

&lt;p&gt;See previous paragraph sentence #1.&lt;/p&gt;

&lt;h2 id=&#34;feature-driven-cycles-suck:b95f08065f33835f1988c422d37af806&#34;&gt;Feature-Driven Cycles Suck&lt;/h2&gt;

&lt;p&gt;&amp;ldquo;When is the report download page going to be done?&amp;rdquo;&lt;/p&gt;

&lt;p&gt;Not by the definition in agile dictionaries, but defined as the environment by which business determines short term goals in reference to features.&lt;/p&gt;

&lt;h2 id=&#34;business-vision:b95f08065f33835f1988c422d37af806&#34;&gt;Business Vision&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Set a clear vision&lt;/li&gt;
&lt;li&gt;Make the vision both short and long term&lt;/li&gt;
&lt;li&gt;Don&amp;rsquo;t pivot&lt;/li&gt;
&lt;li&gt;Avoid the buzzword glory pitchman&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;employee-goals:b95f08065f33835f1988c422d37af806&#34;&gt;Employee Goals&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Consider the employees goals in your vision.&lt;/li&gt;
&lt;li&gt;If you do not care about the employees&amp;rsquo; goals then they might be setting their own.&lt;/li&gt;
&lt;li&gt;Have an idea of what motivates people. We are not all building rockets or curing cancer.&lt;/li&gt;
&lt;li&gt;Make an employee goal the production of a quality product.&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&#34;optimal-relationships:b95f08065f33835f1988c422d37af806&#34;&gt;Optimal Relationships&lt;/h1&gt;

&lt;p&gt;A few items here that I look for:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Does the team easily share code&lt;/li&gt;
&lt;li&gt;Do they internally set group functions (meetings/lunches/after-hours) – can be dangerous&lt;/li&gt;
&lt;li&gt;Can they tell you what others are working on&lt;/li&gt;
&lt;li&gt;Are there a lot of complaints about coworkers&lt;/li&gt;
&lt;li&gt;Ask them who the best employees are&lt;/li&gt;
&lt;li&gt;Provide a way to communicate problems to leadership&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Devs need &lt;a href=&#34;https://michaelochurch.wordpress.com/2014/12/&#34;&gt;CS 666 Political Science&lt;/a&gt; training. It is annoying.&lt;/p&gt;

&lt;h1 id=&#34;hire-the-right-people:b95f08065f33835f1988c422d37af806&#34;&gt;Hire the Right People&lt;/h1&gt;

&lt;p&gt;&lt;img src=&#34;http://scotttactical.com/images/milton.jpg&#34; alt=&#34;Milton Office Space&#34; /&gt;&lt;/p&gt;

&lt;p&gt;Hire people smarter than you and get out of their way. Without the right team you are behind already.&lt;/p&gt;

&lt;p&gt;See my other articles on &lt;a href=&#34;http://scotttactical.com/interview-strategies-a-technology-hiring-manager/&#34;&gt;hiring technology professionals&lt;/a&gt;.&lt;/p&gt;

&lt;h2 id=&#34;don-t-micromanage:b95f08065f33835f1988c422d37af806&#34;&gt;Don&amp;rsquo;t Micromanage&lt;/h2&gt;

&lt;p&gt;Nuff said else failed previous item.&lt;/p&gt;

&lt;h1 id=&#34;understand-software-shelf-life:b95f08065f33835f1988c422d37af806&#34;&gt;Understand Software Shelf Life&lt;/h1&gt;

&lt;h2 id=&#34;shelf-life-definition:b95f08065f33835f1988c422d37af806&#34;&gt;Shelf Life Definition&lt;/h2&gt;

&lt;p&gt;Software expiration has passed when both of the following criteria have been met:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;It no longer produces enough value to support the maintenance of the code&lt;/li&gt;
&lt;li&gt;The proposed value from software improvements is less than the cost of the improvements&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;predict-the-futures:b95f08065f33835f1988c422d37af806&#34;&gt;Predict The Futures&lt;/h2&gt;

&lt;p&gt;Applying a timeline to the life of an application is hard. Not because one cannot estimate a project life, but because most managers are not truthful with themselves on the potential of their project.&lt;/p&gt;

&lt;p&gt;Ass.u.mption: shoestring ultra-successful software lasts forever and will fix rare bugs later when money is pouring.&lt;/p&gt;

&lt;h2 id=&#34;yeah-fix-it-later:b95f08065f33835f1988c422d37af806&#34;&gt;Yeah – Fix It Later&lt;/h2&gt;

&lt;p&gt;Don&amp;rsquo;t fail the &amp;ldquo;fix it later&amp;rdquo; mentality. Sometimes disposable software is appropriate. If you only need to scrape a website once then just write a quick and dirty script and then archive it.&lt;/p&gt;

&lt;h2 id=&#34;plan-for-the-futures:b95f08065f33835f1988c422d37af806&#34;&gt;Plan For The Futures&lt;/h2&gt;

&lt;p&gt;We don&amp;rsquo;t really know what the future holds for us, but we should plan for it. Ask this:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&amp;ldquo;Where is this script stored and why?&amp;rdquo;.&lt;/li&gt;
&lt;li&gt;&amp;ldquo;Where is the documentation?&amp;rdquo;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;If it is only stored locally and undocumented on someone&amp;rsquo;s machine: fail++.&lt;/p&gt;

&lt;h1 id=&#34;bad-code-costs-moar:b95f08065f33835f1988c422d37af806&#34;&gt;Bad Code Costs Moar&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;There is no fix-it-later scenario.&lt;/li&gt;
&lt;li&gt;There will be no point where you be chillin&amp;rsquo; counting benjamins letting engineers scrub code&lt;/li&gt;
&lt;li&gt;There is no pattern that fixes an anti-pattern&lt;/li&gt;
&lt;li&gt;There is no way to pause the businesses for your migration&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;You can only pick 2:&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://scotttactical.com/images/good-fast-cheap-venn-diagram.jpg&#34; alt=&#34;Good Fast Cheap - Pick 2 - Venn Diagram&#34; /&gt;&lt;/p&gt;

&lt;h2 id=&#34;what-is-bad-code:b95f08065f33835f1988c422d37af806&#34;&gt;What is Bad Code&lt;/h2&gt;

&lt;p&gt;This is a hard one to explain.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Sometimes biz pushes devs to deliver sooner than estimates, so they cut corners.&lt;/li&gt;
&lt;li&gt;Sometimes coders are lazy or do not really want to be on a project business is pushing them to move faster on.&lt;/li&gt;
&lt;li&gt;Sometimes coders are just not any good. You hired them so now it is a containment issue.&lt;/li&gt;
&lt;li&gt;Have peer reviews and pull requests, and yes, that costs. &lt;Outsourced cheap stuff&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;myth-of-the-parallel-rewrite:b95f08065f33835f1988c422d37af806&#34;&gt;Myth of the Parallel Rewrite&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&amp;ldquo;Going to refactor code&lt;/li&gt;
&lt;li&gt;&amp;ldquo;Also continuing development or maintaining the current code base&lt;/li&gt;
&lt;li&gt;&amp;ldquo;Not contributing more human or financial resources&lt;/li&gt;
&lt;li&gt;&amp;ldquo;Done in &lt;sup&gt;1&lt;/sup&gt;&amp;frasl;&lt;sub&gt;10&lt;/sub&gt;&lt;span class=&#34;T1&#34;&gt;th&lt;/span&gt; the time that the original code base was developed&lt;/li&gt;
&lt;li&gt;&amp;ldquo;Macho Camacho for President!&lt;/li&gt;
&lt;/ul&gt;

&lt;iframe width=&#34;560&#34; height=&#34;315&#34; src=&#34;https://www.youtube.com/embed/sGUNPMPrxvA&#34; frameborder=&#34;0&#34; allowfullscreen&gt;&lt;/iframe&gt;

&lt;h1 id=&#34;software-development-lifecycle:b95f08065f33835f1988c422d37af806&#34;&gt;Software Development Lifecycle&lt;/h1&gt;

&lt;p&gt;A reasonable software lifecycle is imperative to delivering quality software.&lt;/p&gt;

&lt;p&gt;No cycle == Bad mkay&lt;/p&gt;

&lt;h2 id=&#34;politics-of-the-lifecycle:b95f08065f33835f1988c422d37af806&#34;&gt;Politics of The Lifecycle&lt;/h2&gt;

&lt;p&gt;I intend to write at more length about the politics behind the product lifecycle.&lt;/p&gt;

&lt;p&gt;Case study: There is no policy for a daily deployment to Curiosity rover on Mars and if the previous glitches are an indicator we can assume that even NASA has a high bug rate when dealing with rapid product deployments.&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://www.space.com/23553-mars-rover-curiosity-software-glitch.html&#34;&gt;http://www.space.com/23553-mars-rover-curiosity-software-glitch.html&lt;/a&gt;&lt;/p&gt;

&lt;h1 id=&#34;test-for-the-love-of-all-that-is-sacred-test:b95f08065f33835f1988c422d37af806&#34;&gt;Test - For the Love of All That is Sacred, Test&lt;/h1&gt;

&lt;ul&gt;
&lt;li&gt;If you do not have tests your software probably sucks&lt;/li&gt;
&lt;li&gt;Tests indemnify engineers and build confidence&lt;/li&gt;
&lt;li&gt;Broad set of tests == enjoy the weekend == morale&lt;/li&gt;
&lt;li&gt;New features probably will not break existing functionality&lt;/li&gt;
&lt;li&gt;If there are no tests then deployments are a crap shoot&lt;/li&gt;
&lt;li&gt;Wide Coverage Is Safety&lt;/li&gt;
&lt;li&gt;Estimate tests writing time&lt;/li&gt;
&lt;li&gt;Know your tests&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Imagine this conversation:&lt;/p&gt;

&lt;p&gt;Biz Guy - &amp;ldquo;The super widget functionality I had you put in there last month is not working. What did you guys break?&amp;rdquo;&lt;/p&gt;

&lt;p&gt;Programmer - &amp;ldquo;All tests are passing. I am looking and there are no tests covering any business requirements for such a feature. If you want we can take a look and write a test that covers this feature.&amp;rdquo;&lt;/p&gt;

&lt;h1 id=&#34;conclusion:b95f08065f33835f1988c422d37af806&#34;&gt;Conclusion&lt;/h1&gt;

&lt;p&gt;Build things that make the world better. Treat employees like people. Give back.&lt;/p&gt;
</description>
        </item>
      
    
      
        <item>
          <title>Management for Quality Software Development Managers</title>
          <link>http://scotttactical.com/management-for-quality-software-development/</link>
          <pubDate>Tue, 01 Dec 2015 09:53:52 PST</pubDate>
          <author>Scott Tactical</author>
          <guid>http://scotttactical.com/management-for-quality-software-development/</guid>
          <description>

&lt;p&gt;This started as a list of notes for my boss on how I see the best way to manage technical professionals. I am trying to provide non-technical managers with the resources to direct technical teams in a way that will produce quality software and keep the engineering staff engaged and moving.&lt;/p&gt;

&lt;p&gt;How do you build software that provides value to both clients, users, owners and engineers for the years to come?&lt;/p&gt;

&lt;p&gt;This also assumes a state of:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Knowing how to hire&lt;/li&gt;
&lt;li&gt;Having some resources - not 8 figure funding but enough to pay market rate&lt;/li&gt;
&lt;li&gt;Having a legitimate business model - I suppose it would work for a pr0n spammer too though&lt;/li&gt;
&lt;li&gt;Embracing a genuine desire for quality, progress, and community&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&#34;tl-dr:46b69cc651b36917739e2a1f57a8d295&#34;&gt;TL;DR:&lt;/h1&gt;

&lt;p&gt;This document contains &amp;gt; 2k words.&lt;/p&gt;

&lt;p&gt;See the terse version:&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://scotttactical.com/try-not-2-fuck-up-ur-engineering/&#34;&gt;Try Not 2 Fuck Up Ur Engineering&lt;/a&gt;&lt;/p&gt;

&lt;h1 id=&#34;software-shelf-life:46b69cc651b36917739e2a1f57a8d295&#34;&gt;Software Shelf Life&lt;/h1&gt;

&lt;p&gt;All software has a shelf life. Some software must last for a very long time whereas some software is disposable. Software longevity is derived by the leadership from the top of the organization and if software applications pass their usefulness it is due to the guidance of the leadership. It should not be assumed that long lasting software is the “best” type of software for every need and I will briefly attempt to give some very high level tools I use to determine the case by a set of criteria.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;We have achieved infinite software longevity!!! - NOT
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;img src=&#34;http://scotttactical.com/images/mcd.gif&#34; alt=&#34;We Have Infinite Longevity! - not&#34; /&gt;&lt;/p&gt;

&lt;h2 id=&#34;shelf-life-definition:46b69cc651b36917739e2a1f57a8d295&#34;&gt;Shelf Life Definition&lt;/h2&gt;

&lt;p&gt;&lt;a href=&#34;http://www.popularmechanics.com/space/a17991/voyager-1-voyager-2-retiring-engineer/&#34;&gt;Nasa is looking for&lt;/a&gt; &lt;a href=&#34;https://en.wikipedia.org/wiki/Fortran&#34;&gt;Fortran&lt;/a&gt; engineers to interact with the Voyager space probe. This is one of those exceedingly rare cases when the software outlasts the engineers. Also, I will throw up if anyone throws out the obligatory trope: “they do not build &amp;lsquo;um like they used to”.&lt;/p&gt;

&lt;p&gt;I like to define shelf life in the following way. Software expiration has passed when both of the following criteria have been met.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;It no longer produces enough value to support the maintenance of the code&lt;/li&gt;
&lt;li&gt;The proposed value from software improvements is less than the cost of the improvements&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Intelligent managers can determine the above criteria by the numbers and without much confusion. Businesses who are in a state of going out of business will come upon these decision by running out of resources and will be forced to shut down projects or archive code.&lt;/p&gt;

&lt;p&gt;It should be noted that time is a very important factor to consider in the calculations. It might be affordable financially to have cheap labor work on fixing code for extended months or years, but sometimes opportunity loss has to be calculated. Throwing resources at bad decisions is a recipe for losing. This is a relative of the sunk-cost fallacy.&lt;/p&gt;

&lt;h2 id=&#34;predict-the-future:46b69cc651b36917739e2a1f57a8d295&#34;&gt;Predict The Future&lt;/h2&gt;

&lt;p&gt;This is a bit of art, but applying a timeline to the life of an application is hard. Not because one cannot estimate a project life, but because most managers are not truthful with themselves on the potential of their project. They assume that they can shoestring ultra-successful software that will last forever and if by some rare event bugs show up, well, they can be fixed later when the money is pouring in.&lt;/p&gt;

&lt;p&gt;The “fix it later” mentality is the most common error I encounter. Considering that the majority of my career has been spent cleaning up bad decisions I am qualified to attest to this. Normally when in the “fix it” stage, business principles have lost their original love of the project and are looking for something else to work on. They are probably planning their exit strategy or engaging a new mistress.&lt;/p&gt;

&lt;p&gt;It is not reasonable to say that a project is going to be highly successful and at the same time treating the project like it will only last 6 months. What I mean by this is the software lifespan is implied at six months or less if the management implements development principles that guarantee short-lived software.&lt;/p&gt;

&lt;p&gt;Sometimes disposable software is appropriate. If you only need to scrape a website once then just write a quick and dirty script and then archive it. It is worth noting here that having an intuitive and organized archiving procedure for scripts will add a lot of value by turning a code trash pile into a tool chest.&lt;/p&gt;

&lt;h2 id=&#34;plan-for-the-future:46b69cc651b36917739e2a1f57a8d295&#34;&gt;Plan For The Future&lt;/h2&gt;

&lt;p&gt;We do not really know what the future holds for us, but we should plan for it. One main reason we know about the champion societies of the past and can learn from them is they planned for future peoples to read their story. Monks and librarians have toiled meticulously in the storage and organization of these. This is in contrast to those “barbarian” societies that languish far behind and suffer the problems of a chaotic and backward people.&lt;/p&gt;

&lt;p&gt;A manager can simply ask “where is this script stored and why?”. If it is only stored locally on someone&amp;rsquo;s machine: fail++. The answer to this will show if the coder cares about anything past the initial writing of the script. If there is documentation on the scripts linked from the organized repository then win. Generally that level of control can only come from an experienced technology leader.&lt;/p&gt;

&lt;p&gt;I cannot quantify precisely but disorganized file storage and a lack of repository protocols accounts for a large portion of “code sin” and will absolutely contribute to the weak ROI in the future. It is a truism to say that most of the coding problems have been solved before and that at this point the coders are just building slightly on top of those before them.&lt;/p&gt;

&lt;h1 id=&#34;bad-code-costs-more:46b69cc651b36917739e2a1f57a8d295&#34;&gt;Bad Code Costs More&lt;/h1&gt;

&lt;p&gt;Please see the below diagram. You can have any two of the following scenarios.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://scotttactical.com/images/good-fast-cheap-venn-diagram.jpg&#34; alt=&#34;Good Fast Cheap - Pick 2 - Venn Diagram&#34; /&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;There is no fix-it-later scenario.&lt;/li&gt;
&lt;li&gt;There is no point where you are just chillin&amp;rsquo; counting yo monies while letting engineers clean code sin&lt;/li&gt;
&lt;li&gt;There is no pattern that fixes an anti-pattern&lt;/li&gt;
&lt;li&gt;There is no way to pause the businesses for your migration&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;what-is-bad-code:46b69cc651b36917739e2a1f57a8d295&#34;&gt;What is Bad Code&lt;/h2&gt;

&lt;p&gt;This is a hard one to explain. Many things can contribute to bad code.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://scotttactical.com/images/milton.jpg&#34; alt=&#34;Milton Office Space&#34; /&gt;&lt;/p&gt;

&lt;h3 id=&#34;the-why-of-bad-code:46b69cc651b36917739e2a1f57a8d295&#34;&gt;The “why” of bad code.&lt;/h3&gt;

&lt;p&gt;Sometimes it is because a requirement is placed on the engineering team that pushes them to deliver something sooner than their estimations. Programmers are generally a timid and self-disparaging lot so they tend to over promise. They are afraid to tell business that things cannot be accomplished so they cut corners. All those combined is a recipe for faults and bugs.&lt;/p&gt;

&lt;p&gt;Sometimes coders are lazy. You can spot those too. They do not really want to be coding or they do not like the job they are doing. On top of that business is probably pushing for them to move faster. What is the motivation not to stuff the sin under the rug.&lt;/p&gt;

&lt;p&gt;Sometimes coders are just not any good. You hired them so now it is a management issue and the only way to keep bad code from getting into the repository is to have peer reviews and pull requests. That takes quite a bit of time so again you have not saved any money with your outsourced cheap stuff.&lt;/p&gt;

&lt;p&gt;I will go into this topic in more detail in another article.&lt;/p&gt;

&lt;h2 id=&#34;myth-of-the-parallel-rewrite:46b69cc651b36917739e2a1f57a8d295&#34;&gt;Myth of the Parallel Rewrite&lt;/h2&gt;

&lt;p&gt;It has been a common theme in my career to hear business folks tell us that they are going to refactor code while at the same time continuing development or maintaining the current code base while also not contributing more human or financial resources to the equation. And all of this will be done in 1/10th the time that the original code base was developed.&lt;/p&gt;

&lt;p&gt;To paraphrase Presidente Macho Camacho&amp;rsquo;s State of the Union:&lt;/p&gt;

&lt;iframe width=&#34;560&#34; height=&#34;315&#34; src=&#34;https://www.youtube.com/embed/sGUNPMPrxvA&#34; frameborder=&#34;0&#34; allowfullscreen&gt;&lt;/iframe&gt;

&lt;h1 id=&#34;software-development-lifecycle:46b69cc651b36917739e2a1f57a8d295&#34;&gt;Software Development Lifecycle&lt;/h1&gt;

&lt;p&gt;A reasonable software lifecycle is imperative to delivering quality software. The terms of the lifecycle are entirely determined by the needs of the business, but doing away with an organized lifecycle is a recipe for failure. Maybe a business needs to fail to encourage the evolutionary aspect of the free market. Failure is not so beneficial though if no one learns from the mistake.&lt;/p&gt;

&lt;p&gt;
&lt;figure &gt;
    &lt;a href=&#34;http://nvie.com/posts/a-successful-git-branching-model/&#34;&gt;
        &lt;img src=&#34;http://scotttactical.com/images/git-model.png&#34; /&gt;
    &lt;/a&gt;
    
    &lt;figcaption&gt;
        &lt;h4&gt;Git Model via Vincent Driessen&lt;/h4&gt;
        
    &lt;/figcaption&gt;
    
&lt;/figure&gt;
&lt;/p&gt;

&lt;h2 id=&#34;politics-of-the-lifecycle:46b69cc651b36917739e2a1f57a8d295&#34;&gt;Politics of The Lifecycle&lt;/h2&gt;

&lt;p&gt;I intend to write at more length about the politics behind the product lifecycle. At this time I will just leave the note that the deployment schedule reflects software critical value. Requesting a development team to constantly deploy denotes a lack of care regarding software quality and stability. There is no policy for a daily deployment to Curiosity rover on Mars and if the previous glitches are an indicator we can assume that even &lt;a href=&#34;http://www.space.com/23553-mars-rover-curiosity-software-glitch.html&#34;&gt;NASA has a high bug rate&lt;/a&gt; when dealing with rapid product deployments. Critical software needs a settling time.&lt;/p&gt;

&lt;h1 id=&#34;optimal-relationships:46b69cc651b36917739e2a1f57a8d295&#34;&gt;Optimal Relationships&lt;/h1&gt;

&lt;p&gt;What is a development team without a solid lesson in &lt;a href=&#34;https://michaelochurch.wordpress.com/2014/12/&#34;&gt;CS 666&lt;/a&gt;. In such a petty manner, decent engineers will offset very good engineers to find their ways into the Herman/Miller of power. And given what we already know about politics + geekness; it is easy to see that the worst of a Klingon Game of Thrones will play out.&lt;/p&gt;

&lt;p&gt;It is imperative for leaders to set managers in place who will put the team first instead of their careers. That kind of leadership rarely exists outside of sports and the military hence why I am well versed in tribal coalescence.&lt;/p&gt;

&lt;p&gt;How can you spot a problem? It is beyond the scope of this article to provide a team-building dissertation but I will append a few items here that I look for.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Does the team easily share code&lt;/li&gt;
&lt;li&gt;Do they internally set group functions (meetings/lunches/after-hours) – can also be dangerous&lt;/li&gt;
&lt;li&gt;Can they tell you what others are working on&lt;/li&gt;
&lt;li&gt;Are there a lot of complaints about coworkers&lt;/li&gt;
&lt;li&gt;Ask them who the best employees are&lt;/li&gt;
&lt;li&gt;Are there provisional methods for communicating concerns up the chain of command&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&#34;executive-leadership:46b69cc651b36917739e2a1f57a8d295&#34;&gt;Executive Leadership&lt;/h1&gt;

&lt;p&gt;Bloated and ugly products start at the top and only the resources for good engineering begin there.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://scotttactical.com/images/jobs.jpg&#34; alt=&#34;Steve Jobs&#34; /&gt;&lt;/p&gt;

&lt;p&gt;Even Steve Jobs got booted.&lt;/p&gt;

&lt;p&gt;If the leadership is only concerned with making quick cash then the product quality is probably going to be garbage. If they are only in it for the money why would they care about the product. If they are in it for ego then the product will probably look like a cartoon.&lt;/p&gt;

&lt;p&gt;Personally I love making things and my personal image comes with the work I do. From building cars to writing quality code, I try to create things that are valuable and last beyond my time.&lt;/p&gt;

&lt;p&gt;Good leaders should just plant the idea, find the people that want to complete it and stand out of the way and watch the numbers. Sorry chief, if you want to be creative you gotta give up the title and join us heroes in the trenches. The three ways business leaders can add value is with numbers, numbers, numbers.&lt;/p&gt;

&lt;h2 id=&#34;the-business-requirement:46b69cc651b36917739e2a1f57a8d295&#34;&gt;The Business Requirement&lt;/h2&gt;

&lt;p&gt;Write a business requirement that reflects specific details about a problem that the business is solving based on market research numbers. The problem must be defined with clear terms and with enough details so that anyone who is not familiar with the product can figure out how they are benefitting from the change. The product managers should be used to simply translating business requirements only so much as that they make sense to everyone involved. Engineers should be able to express the problem back to stakeholders in terms that the customer can understand.&lt;/p&gt;

&lt;h2 id=&#34;feature-requests-r-bad:46b69cc651b36917739e2a1f57a8d295&#34;&gt;Feature Requests R Bad&lt;/h2&gt;

&lt;p&gt;I know you really want to. You think you know UI design and are well versed in using a browser. In reality you probably suck at engineering/UI/art though. If you are looking at a widget on another site and trying to “innovate” a feature into your product but lack any sort of market research data for that specific functionality then you can count yourself among most managers. It will probably dictate poor code and make employees short sighted and unhappy. Good luck hoss.&lt;/p&gt;

&lt;p&gt;See previous paragraph sentence #1.&lt;/p&gt;

&lt;h2 id=&#34;feature-driven-cycles-suck:46b69cc651b36917739e2a1f57a8d295&#34;&gt;Feature-Driven Cycles Suck&lt;/h2&gt;

&lt;p&gt;“When is the report download page going to be done?”&lt;/p&gt;

&lt;p&gt;Not by the definition in wiki, but defined as the environment by which business determines short term goals in reference to features. Referencing a small block of public-facing functionality without any understanding of the iceberg underneath it does no service to the longevity of the code or the team and shows a lack of technical savvy. Savvy?&lt;/p&gt;

&lt;p&gt;While the most common form of product life cycles in my experience I find it to be the least beneficial to morale and code quality. Of course every place I have worked has been “agile” really it was just agile in name and then when business wanted something they shoved a feature request at us asking for a button that does X or a report than shows better numbers on an always increasing trend.&lt;/p&gt;

&lt;h2 id=&#34;business-vision:46b69cc651b36917739e2a1f57a8d295&#34;&gt;Business Vision&lt;/h2&gt;

&lt;p&gt;&lt;img src=&#34;http://scotttactical.com/images/clockwork-orange.jpg&#34; alt=&#34;Clockwork Orange&#34; /&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Set a clear vision.&lt;/li&gt;
&lt;li&gt;Make the vision both short and long term.&lt;/li&gt;
&lt;li&gt;Do not pivot.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;If you say that the market has shown people moving toward X so you are going to help the company get there then actually do that. And if six months down the road you pivot and say that product Y is the new focus and that the previous work towards X is halted: well, then you loose leader cred. The market does not change every 6 months. You probably just listened to a pitch guy smooch his way onto your planning team and shine up the buzzword array of glory.&lt;/p&gt;

&lt;h2 id=&#34;employee-goals:46b69cc651b36917739e2a1f57a8d295&#34;&gt;Employee Goals&lt;/h2&gt;

&lt;p&gt;Consider the employees goals in your vision. If you do not care about the employees&amp;rsquo; goals then they might be setting their own underneath you. We are not all building rockets or curing cancer. Have an idea of what motivates people. When you know your employees then you know how to help them. I tend to define the distinction between leaders and managers as those who take responsibility for those they lead vs those who who only care about pleasing their managers.&lt;/p&gt;

&lt;p&gt;Make an employee goal the production of a quality product. Even if someone is not building rockets they can still have pride in something. If they are building crap however no one wants to tell their family about it.&lt;/p&gt;

&lt;h1 id=&#34;hire-the-right-people:46b69cc651b36917739e2a1f57a8d295&#34;&gt;Hire the Right People&lt;/h1&gt;

&lt;pre&gt;&lt;code&gt;Hire people smarter than you and get out of their way. - Multiple References
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;I have written a little bit on the aspects of hiring technology employees. This is extremely important. You have not studied and worked 20 years in the engineering field so there is no way to teach you how to think like us. That is a separate skill. Just because you can drive your car and change the oil does not mean you can engineer a better motor.&lt;/p&gt;

&lt;h1 id=&#34;test-for-the-love-of-all-that-is-sacred-test:46b69cc651b36917739e2a1f57a8d295&#34;&gt;Test - For the Love of All That is Sacred, Test&lt;/h1&gt;

&lt;p&gt;If you do not have tests your software probably sucks. Or maybe it just works fine and you do not realize that it sucks. Either way it is a nightmare.&lt;/p&gt;

&lt;h2 id=&#34;tests-indemnify-engineers:46b69cc651b36917739e2a1f57a8d295&#34;&gt;Tests Indemnify Engineers&lt;/h2&gt;

&lt;p&gt;Engineers who have a broad and covering set of tests can enjoy the weekend knowing that new features probably will not break existing functionality.&lt;/p&gt;

&lt;p&gt;On the other hand, after every release the business managers will suspect any drop in traffic or margin to be associated to some change made by the engineering team. If there are no test cases covering anything then it is likely the engineers did break something.&lt;/p&gt;

&lt;h2 id=&#34;wide-coverage-is-safety:46b69cc651b36917739e2a1f57a8d295&#34;&gt;Wide Coverage Is Safety&lt;/h2&gt;

&lt;p&gt;Have enough coverage so that coverage is a business requirement.  If there is no coverage at all on a 2 year old application then there is not much case for starting to create tests.  You probably should not be working there anyway, unless you have upside.  If however, most of the application is covered in a test then adding functionality without tests because businesses moved deadlines up sets onus back onto business for allocating resources for test writing.&lt;/p&gt;

&lt;p&gt;Imagine this conversation:&lt;/p&gt;

&lt;p&gt;Biz Guy - &amp;ldquo;The super widget functionality I had you put in there last month is not working. What did you guys break?&amp;rdquo;&lt;/p&gt;

&lt;p&gt;Programmer - &amp;ldquo;All tests are passing. I am looking and there are no tests covering any business requirements for such a feature. If you want we can take a look and write a test that covers this feature.&amp;rdquo;&lt;/p&gt;

&lt;h2 id=&#34;know-your-tests:46b69cc651b36917739e2a1f57a8d295&#34;&gt;Know Your Tests&lt;/h2&gt;

&lt;p&gt;Business should know as much about tests as &amp;ldquo;features&amp;rdquo;. Granted if the user base does not care about quality then tests do not matter much.&lt;/p&gt;

&lt;h1 id=&#34;conclusion:46b69cc651b36917739e2a1f57a8d295&#34;&gt;Conclusion&lt;/h1&gt;

&lt;p&gt;Go forth and create good things.
Then give back to the world.&lt;/p&gt;
</description>
        </item>
      
    
      
        <item>
          <title>PHPunit Slowness Performance Suggestions</title>
          <link>http://scotttactical.com/performance-suggestions-phpunit-slowness</link>
          <pubDate>Wed, 04 Nov 2015 12:57:42 PST</pubDate>
          <author>Scott Tactical</author>
          <guid>http://scotttactical.com/performance-suggestions-phpunit-slowness</guid>
          <description>

&lt;h1 id=&#34;phpunit-is-slowness:d306273837598a7a2a686add086bab85&#34;&gt;PHPUnit Is Slowness&lt;/h1&gt;

&lt;p&gt;I love &lt;a href=&#34;https://phpunit.de/&#34;&gt;PHPUnit&lt;/a&gt; don&amp;rsquo;t get me wrong. More than a testing library, I like testing, or having tests. It&amp;rsquo;s like the code got yo back bro! Build code that lasts.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;EDIT&lt;/em&gt;: I know most of the problems are inherent with tests not the testing framework.  However, my requirements dictate how I use it to a certain extent.  Peace.&lt;/p&gt;

&lt;h2 id=&#34;phpunit-is-painfully-slow:d306273837598a7a2a686add086bab85&#34;&gt;PHPUnit is painfully slow.&lt;/h2&gt;

&lt;p&gt;&lt;img src=&#34;http://scotttactical.com/images/turtle-speed.jpg&#34; alt=&#34;PHPUnit Is Slow&#34; /&gt;&lt;/p&gt;

&lt;p&gt;Seriously. Though. Maybe having a concurrent environment it can run it would help. I worked at a place with 65,000 unit tests and if they ran as slow as our unit tests here it would never finish. It was literally taking 30-60 seconds per test. That is 65000 x 60 = 1083 hours or 45 days.&lt;/p&gt;

&lt;p&gt;For reference the 41 year old &lt;a href=&#34;http://www.npr.org/sections/thetwo-way/2015/07/13/422610986/ultramarathoner-finishes-the-appalachian-trail-in-record-time&#34;&gt;Scott Jurek&lt;/a&gt; can walk the &lt;a href=&#34;http://www.nps.gov/appa/index.htm&#34;&gt;2000+ mile Appalachian Trail&lt;/a&gt; in 45 days. Single threaded of course.&lt;/p&gt;

&lt;h2 id=&#34;why-is-phpunit-anti-performant:d306273837598a7a2a686add086bab85&#34;&gt;Why is PHPUnit Anti-Performant&lt;/h2&gt;

&lt;p&gt;Some thing that are inherent to unit tests that make them slow.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Tests are usually not well encapsulated&lt;/li&gt;
&lt;li&gt;Many tests aren&amp;rsquo;t true unit tests - @see integration tests&lt;/li&gt;
&lt;li&gt;Databases must be built and destroyed for every test&lt;/li&gt;
&lt;li&gt;Connections from local systems are slow&lt;/li&gt;
&lt;li&gt;Writing to file on a local system is slow&lt;/li&gt;
&lt;li&gt;Generating reports is intensive&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&#34;strategies:d306273837598a7a2a686add086bab85&#34;&gt;Strategies&lt;/h1&gt;

&lt;h2 id=&#34;sqlite-in-memory:d306273837598a7a2a686add086bab85&#34;&gt;SQLite - In Memory&lt;/h2&gt;

&lt;p&gt;&lt;img src=&#34;http://scotttactical.com/images/sqlite.gif&#34; alt=&#34;SQLite&#34; /&gt;&lt;/p&gt;

&lt;p&gt;Switch to an in-memory database. Even if you have SSD drives its going to be slow. &lt;a href=&#34;https://www.sqlite.org/&#34;&gt;SQLite&lt;/a&gt; is on OS X out of the box I am fairly sure and comes with most &amp;lsquo;nix flavors. Considering they embed it all over the place.&lt;/p&gt;

&lt;p&gt;Setting up Laravel it would be something like this:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-php&#34;&gt;
&#39;sqlite&#39; =&amp;gt; [
    &#39;driver&#39;   =&amp;gt; &#39;sqlite&#39;,
//  &#39;database&#39; =&amp;gt; storage_path().&#39;/database.sqlite&#39;,
    &#39;database&#39; =&amp;gt; &#39;:memory:&#39;,
    &#39;prefix&#39;   =&amp;gt; &#39;&#39;,
],
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Just comment out the hard path.
Then add a record for the drive in your phpunit.xml
I also like to make sure my host is set to not kill anything. I have wiped out a dev database or two.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-xml&#34;&gt;&amp;lt;env name=&amp;quot;DATABASE_DRIVER&amp;quot; value=&amp;quot;sqlite&amp;quot;/&amp;gt;
&amp;lt;env name=&amp;quot;DB_HOST&amp;quot; value=&amp;quot;NO&amp;quot;/&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;database-sometimes:d306273837598a7a2a686add086bab85&#34;&gt;Database - Sometimes&lt;/h2&gt;

&lt;p&gt;I have two base test cases that I use for almost everything. One that wraps up Laravel or the big framework I&amp;rsquo;m messing with or one that will just extend phpunit by itself.  It might even be better to have data groups into domains so that when you are running a group of tests that it only loads up those tables.&lt;/p&gt;

&lt;p&gt;We have a couple hundred tests. Not much.  But it takes 2-5 seconds to load up all the data. That adds up to minutes.  Can&amp;rsquo;t handle that.&lt;/p&gt;

&lt;h2 id=&#34;grouping-test-suites:d306273837598a7a2a686add086bab85&#34;&gt;Grouping Test Suites&lt;/h2&gt;

&lt;p&gt;You have the ability to group your tests. I always have my developers add docblocks such as below so that PHPUnit will know how to group thing. The fields that I want them to use are:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;@author - for running all mine or someone&amp;rsquo;s tests&lt;/li&gt;
&lt;li&gt;@group - I have them just put the package in this place&lt;/li&gt;
&lt;li&gt;@namespace - I think this works&lt;/li&gt;
&lt;/ul&gt;

&lt;pre&gt;&lt;code class=&#34;language-php&#34;&gt;
/**
 *
 * @author solvire &amp;lt;stevenjscott@gmail.com&amp;gt;
 * @package Rules
 * @group Rules
 * @namespace LeadFerret\Lib\Rules
 */
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Running &lt;code&gt;./vendor/bin/phpunit --list-groups&lt;/code&gt; will give you an idea of what groups you can run.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;./vendor/bin/phpunit --list-groups
PHPUnit 4.8.16 by Sebastian Bergmann and contributors.

Available test group(s):
 - API
 - Models
 - Rules
 - Transformers
 - default
 - solvire &amp;lt;stevenjscott@gmail.com&amp;gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;filter-your-tests:d306273837598a7a2a686add086bab85&#34;&gt;Filter Your Tests&lt;/h2&gt;

&lt;p&gt;Run only the tests you need. Sometimes I&amp;rsquo;m working with a class and I want to keep running that class.  Just filter by the test class name:&lt;/p&gt;

&lt;p&gt;&lt;code&gt;./vendor/bin/phpunit --filter=&amp;quot;testValidateTrustedCanModifyCompany&amp;quot;&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Make your test names interesting camel cases. If you run testdox it comes out easier to read:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;./vendor/bin/phpunit --filter=&amp;quot;testValidateTrustedCanModifyCompany&amp;quot; --testdox
PHPUnit 4.8.16 by Sebastian Bergmann and contributors.

LeadFerret\Lib\Rules\CompanyModifyRuleProvider
 [x] Validate trusted can modify company

&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;turn-off-code-coverage:d306273837598a7a2a686add086bab85&#34;&gt;Turn Off Code Coverage&lt;/h2&gt;

&lt;p&gt;You don&amp;rsquo;t always have to run code coverage reports. In fact probably only before a deployment. Either you really love to see code coverage or you hate dealing with unit tests.  Doesn&amp;rsquo;t really seem to be much between.&lt;/p&gt;

&lt;h3 id=&#34;performance-tests:d306273837598a7a2a686add086bab85&#34;&gt;Performance Tests&lt;/h3&gt;

&lt;p&gt;The difference was so staggering I that I was totally irritated I didn&amp;rsquo;t find this sooner. I was even getting in trying to debug at the lower code level.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;./vendor/bin/phpunit --filter=&amp;quot;testValidateTrustedCanModifyCompany&amp;quot; --no-coverage
PHPUnit 4.8.16 by Sebastian Bergmann and contributors.
.
Time: 3.98 seconds, Memory: 35.25Mb
OK (1 test, 2 assertions)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;And with coverage:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;./vendor/bin/phpunit --filter=&amp;quot;testValidateTrustedCanModifyCompany&amp;quot;
PHPUnit 4.8.16 by Sebastian Bergmann and contributors.
.
Time: 48.54 seconds, Memory: 46.75Mb
OK (1 test, 2 assertions)
Generating code coverage report in HTML format ... done
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;FASTER!&lt;/p&gt;

&lt;h2 id=&#34;javascript-for-the-assist:d306273837598a7a2a686add086bab85&#34;&gt;JavaScript For The Assist&lt;/h2&gt;

&lt;p&gt;&lt;img src=&#34;http://scotttactical.com/images/gulp.png&#34; alt=&#34;GulpJS&#34; /&gt;&lt;/p&gt;

&lt;p&gt;We have been toying with using &lt;a href=&#34;http://gulpjs.com/&#34;&gt;Gulp&lt;/a&gt; / &lt;a href=&#34;https://www.npmjs.com/&#34;&gt;NPM&lt;/a&gt; for setting up a better workflow.  It is simple enough that once a file is saved that scripts can kick off the appropriate unit tests. If your tests are completing in less than a couple seconds then it doesn&amp;rsquo;t hurt to keep running them. If they break you may know it sooner.  This is also helpful for those people who refuse to use a full-featured IDE.  Probably also the same people that enjoy working on javascript in the dark.  I know who you are. O.o&lt;/p&gt;

&lt;h1 id=&#34;conclusion:d306273837598a7a2a686add086bab85&#34;&gt;Conclusion&lt;/h1&gt;

&lt;p&gt;Life is much better now.&lt;/p&gt;

&lt;p&gt;Test-driven development is a great way to go about things.  I highly suggest it. It makes your life easier in the long run and your credibility as an engineer is safer when you aren&amp;rsquo;t worried about whether you are going to break things. If you automate the process and provide cool reports with graphs then you can build a friendly rivalry based on coverage rights.&lt;/p&gt;

&lt;p&gt;Build Quality Software&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Engineer; Don&amp;rsquo;t Hack&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;=st=&lt;/p&gt;
</description>
        </item>
      
    
      
        <item>
          <title>Deploying Hugo the Golang CMS on DigitalOcean - Nginx</title>
          <link>http://scotttactical.com/deploying-hugo-golang-digitalocean-nginx</link>
          <pubDate>Thu, 22 Oct 2015 06:29:31 PDT</pubDate>
          <author>Scott Tactical</author>
          <guid>http://scotttactical.com/deploying-hugo-golang-digitalocean-nginx</guid>
          <description>

&lt;h1 id=&#34;deploying-hugo-the-golang-cms-on-digitalocean:05ba16f4d070e50db8ed0ad9d587f7eb&#34;&gt;Deploying Hugo the Golang CMS on DigitalOcean&lt;/h1&gt;

&lt;h2 id=&#34;creating-a-droplet:05ba16f4d070e50db8ed0ad9d587f7eb&#34;&gt;Creating a Droplet&lt;/h2&gt;

&lt;p&gt;I am a bit partial to CentOS. The lastest version as of this writing is &lt;em&gt;CentOS Linux release 7.1.1503 (Core)&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;Setting up a droplet is always very simple. Just turn it on basically. Upload your ssh keys. Done.&lt;/p&gt;

&lt;h2 id=&#34;install-nginx:05ba16f4d070e50db8ed0ad9d587f7eb&#34;&gt;Install Nginx&lt;/h2&gt;

&lt;h3 id=&#34;add-the-epel-repo:05ba16f4d070e50db8ed0ad9d587f7eb&#34;&gt;Add the epel repo:&lt;/h3&gt;

&lt;pre&gt;&lt;code&gt;yum install epel-release
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;install:05ba16f4d070e50db8ed0ad9d587f7eb&#34;&gt;Install&lt;/h3&gt;

&lt;pre&gt;&lt;code&gt;yum install nginx
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;start-it:05ba16f4d070e50db8ed0ad9d587f7eb&#34;&gt;Start it&lt;/h3&gt;

&lt;pre&gt;&lt;code&gt;service nginx start
systemctl enable nginx
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;create-the-folders:05ba16f4d070e50db8ed0ad9d587f7eb&#34;&gt;Create the Folders&lt;/h3&gt;

&lt;pre&gt;&lt;code&gt;mkdir -p /var/www/ursite/
chown -R nginx:nginx /var/www
touch /var/www/ursite/index.html - or clone your site
cp /etc/nginx/sites-available/default /etc/nginx/sites-available/ursite
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;configure-nginx:05ba16f4d070e50db8ed0ad9d587f7eb&#34;&gt;Configure nginx&lt;/h3&gt;

&lt;p&gt;open the config file: &lt;code&gt;vim /etc/nginx/conf.d/virtual.conf&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Add the following:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-conf&#34;&gt;#
# A virtual host using mix of IP-, name-, and port-based configuration
#

server {
    listen       80;
    server_name  scotttactical.com;
    server_alias go.scotttactical.com;

    location / {
        root   /var/www/stac/public/;
        index  index.html;
    }
}
&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&#34;install-go-hugo:05ba16f4d070e50db8ed0ad9d587f7eb&#34;&gt;Install  Go + Hugo&lt;/h4&gt;

&lt;pre&gt;&lt;code&gt;yum install go
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;I decided to install from source
Edit your bash script to have the proper variables in place.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;yum install git hg
export GOPATH=$HOME/go
go get -v github.com/spf13/hugo
cp $GOPATH/bin/hugo /usr/local/bin/
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;NOTE: THis actually isn&amp;rsquo;t necessary.  Just check it out and go with it. Afer screwing with it a few minutes I facepalmed&amp;hellip; they are static files. Doh!&lt;/p&gt;
</description>
        </item>
      
    
      
        <item>
          <title>Hugo: A replacement for Wordpress</title>
          <link>http://scotttactical.com/hugo-a-replacement-for-wordpress/</link>
          <pubDate>Wed, 21 Oct 2015 15:39:13 PDT</pubDate>
          <author>Scott Tactical</author>
          <guid>http://scotttactical.com/hugo-a-replacement-for-wordpress/</guid>
          <description>

&lt;h1 id=&#34;hugo-a-replacement-for-wordpress:af5d620423bd53c36ac9d8e74d1bb8f8&#34;&gt;Hugo: A Replacement for Wordpress&lt;/h1&gt;

&lt;h2 id=&#34;tl-dr:af5d620423bd53c36ac9d8e74d1bb8f8&#34;&gt;TL;DR&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;I researched go&lt;/li&gt;
&lt;li&gt;Found Hugo&lt;/li&gt;
&lt;li&gt;Setup a test&lt;/li&gt;
&lt;li&gt;Migrated my Wordpress instance&lt;/li&gt;
&lt;li&gt;Launched DigitalOcean Droplet&lt;/li&gt;
&lt;li&gt;Deployed&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Total time: &lt;em&gt;6 hours&lt;/em&gt;&lt;/p&gt;

&lt;h2 id=&#34;continued:af5d620423bd53c36ac9d8e74d1bb8f8&#34;&gt;Continued:&lt;/h2&gt;

&lt;p&gt;My problems started almost a year before I took up this cause. At the time I only had 2 Wordpress sites. Very very low traffic.  Only a couple users a day.  They were mostly place holders for business sites.&lt;/p&gt;

&lt;h2 id=&#34;wordpress-is-hungry:af5d620423bd53c36ac9d8e74d1bb8f8&#34;&gt;Wordpress is hungry&lt;/h2&gt;

&lt;p&gt;What was annoying about the case was that they would randomly &lt;em&gt;carsh&lt;/em&gt;! I realized they were running &lt;em&gt;out of memory&lt;/em&gt;. I couldn&amp;rsquo;t figure out why because I just wouldn&amp;rsquo;t let myself believe that a couple instances of Wordpress were enough to run out of memory. It was an AWS box running with .5GB of memory and some swap space. I can&amp;rsquo;t remember what. Maybe I was just too optimistic.&lt;/p&gt;

&lt;p&gt;I reimaged the server, installed several performance plugins, cached anything I could, but still it would eat memory like a lonely fat girl at a buffet. Every couple days my monitor would go off telling me the site was down. The monitor wasn&amp;rsquo;t in place immediately because I didn&amp;rsquo;t think I needed one. It was only after the site had been offline for a couple days before I realized that I had to get a monitor.&lt;/p&gt;

&lt;p&gt;Well eventually I decided it just needed more hardware. I went to 1G of memory for the 2 instances. That carshed as well. It was like watching the movie Carsh in slow motion. I added a couple gigs of swap, but then aws started acting funny and it would fill up the memory immediately. I then went to 2G ram and 2G of swap. Still - Carshon Daily show!&lt;/p&gt;

&lt;h2 id=&#34;it-s-the-future-already:af5d620423bd53c36ac9d8e74d1bb8f8&#34;&gt;It&amp;rsquo;s the Future Already&lt;/h2&gt;

&lt;p&gt;It&amp;rsquo;s 2015. In honor of 2015 and #BackToTheFuture day I am getting over 2000&amp;rsquo;s technology and moving on to something new.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Blogs should fast and light&lt;/em&gt; and should be able to run in the fog. Static, and with out short codes. Gawd! And hoverboards.&lt;/p&gt;

&lt;h1 id=&#34;so-starts-my-late-journey:af5d620423bd53c36ac9d8e74d1bb8f8&#34;&gt;So Starts My (Late) Journey&lt;/h1&gt;

&lt;h2 id=&#34;my-requirements:af5d620423bd53c36ac9d8e74d1bb8f8&#34;&gt;My Requirements&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Easy markup (or markdown)&lt;/li&gt;
&lt;li&gt;Lite - less than 500M of memory required&lt;/li&gt;
&lt;li&gt;Static (optional but nice)&lt;/li&gt;
&lt;li&gt;No DB or a lighter option&lt;/li&gt;
&lt;li&gt;Image manipulation or gallery ease&lt;/li&gt;
&lt;li&gt;Simple enough a business person can (ha this isn&amp;rsquo;t the future you are looking for)&lt;/li&gt;
&lt;li&gt;Authentication layers&lt;/li&gt;
&lt;li&gt;SEO items

&lt;ul&gt;
&lt;li&gt;Sitemap&lt;/li&gt;
&lt;li&gt;Metatags&lt;/li&gt;
&lt;li&gt;Links&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;Multiple environment friendly (dev/stage/prod)&lt;/li&gt;
&lt;li&gt;PERFORMANT fast&lt;/li&gt;
&lt;li&gt;Templates (market)&lt;/li&gt;
&lt;li&gt;Multi-site management (please?)&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;languages-prepared-to-flamed:af5d620423bd53c36ac9d8e74d1bb8f8&#34;&gt;Languages - PREPARED TO FLAMED!&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;PHP - too slow - boring - part of my problem already&lt;/li&gt;
&lt;li&gt;Python - Interesting but everyone wants to use django. Kinda heavy for this&lt;/li&gt;
&lt;li&gt;Ruby - pretty good but still kinda foreign to me&lt;/li&gt;
&lt;li&gt;Go - I wanna learn it but where are the projects&lt;/li&gt;
&lt;li&gt;Java - swatting at flies with a sledge hammer&lt;/li&gt;
&lt;li&gt;Scala - eh&amp;hellip; i liked this idea but still too big&lt;/li&gt;
&lt;li&gt;C++ - Not a masochist&lt;/li&gt;
&lt;li&gt;Perl - Not unless you say perl in a French accent every time&lt;/li&gt;
&lt;li&gt;Node.js - I will not allow JS on my backend, it&amp;rsquo;s unnatural&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Given my above list of languages I kinda forced myself into a sector.&lt;/p&gt;

&lt;h3 id=&#34;languages-decisions:af5d620423bd53c36ac9d8e74d1bb8f8&#34;&gt;Languages - Decisions&lt;/h3&gt;

&lt;h4 id=&#34;ruby:af5d620423bd53c36ac9d8e74d1bb8f8&#34;&gt;Ruby&lt;/h4&gt;

&lt;p&gt;I really liked &lt;a href=&#34;http://jekyllrb.com/docs/home/&#34;&gt;jekyll&lt;/a&gt; and might have gone with it if Ruby wasn&amp;rsquo;t such a foreign concept to me. And I haven&amp;rsquo;t decided if I want to jump in and learn it completely. So not this time gems.&lt;/p&gt;

&lt;h4 id=&#34;a-shot-at-python:af5d620423bd53c36ac9d8e74d1bb8f8&#34;&gt;A Shot at Python&lt;/h4&gt;

&lt;p&gt;I have a ton of experience with PHP. They are all about the same. They can get okay performance if you cache everything but they are just too heavy. And it&amp;rsquo;s PHP. I&amp;rsquo;m over it. Drupal. Seriously it&amp;rsquo;s 2015. That thing should have died 10 years ago.  Are you still driving your subaru brat?&lt;/p&gt;

&lt;p&gt;I&amp;rsquo;ve used python before and I did give it a good run, but &lt;a href=&#34;https://www.djangoproject.com/&#34;&gt;Django&lt;/a&gt; is just too big IMO. A blog is simple. It needs to stay simple. Plus they are trying to recreate Wordpress in all of its glory. No thanks.&lt;/p&gt;

&lt;p&gt;To be fair to python, I spent a little time going through the implementation of &lt;a href=&#34;http://mezzanine.jupo.org/&#34;&gt;Mezzanine&lt;/a&gt; and &lt;a href=&#34;http://www.django-cms.org/en/&#34;&gt;Django-CMS&lt;/a&gt;.  Still. Too grande.&lt;/p&gt;

&lt;h4 id=&#34;java-et-al:af5d620423bd53c36ac9d8e74d1bb8f8&#34;&gt;Java et al&lt;/h4&gt;

&lt;p&gt;I have spent time before researching Java and C++ CMS programs. They are probably okay for monolithic enterprises who need some sort of back stroking to know they used a dump truck with a Cadillac interior to go pick up the groceries.  When 500 people will be working on it and you need a 20 step approval process I guess. I digress.&lt;/p&gt;

&lt;h1 id=&#34;starting-with-go:af5d620423bd53c36ac9d8e74d1bb8f8&#34;&gt;Starting with Go&lt;/h1&gt;

&lt;p&gt;Ok fine. Maybe now&amp;rsquo;s my chance to play with &lt;a href=&#34;https://golang.org/&#34;&gt;Golang&lt;/a&gt;. I was looking for a project for it so let&amp;rsquo;s give this a try.&lt;/p&gt;

&lt;p&gt;So far my implementation ideas are:
- roll my own
- wrap up a framework
- use a designed blog framework&lt;/p&gt;

&lt;h2 id=&#34;some-frameworks:af5d620423bd53c36ac9d8e74d1bb8f8&#34;&gt;Some Frameworks&lt;/h2&gt;

&lt;p&gt;I really liked a few of the frameworks, but as time went on I decided to see if I could find something lighter. But for records sake here are the samples I looked at&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://revel.github.io/&#34;&gt;http://revel.github.io/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://beego.me/&#34;&gt;http://beego.me/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://martini.codegangsta.io/&#34;&gt;http://martini.codegangsta.io/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;BTW: Martini looked really cool. Light learning curve. I almost went with that, but felt like I could find better features in a purpose built app.&lt;/p&gt;

&lt;h2 id=&#34;a-blog-solution:af5d620423bd53c36ac9d8e74d1bb8f8&#34;&gt;A Blog Solution&lt;/h2&gt;

&lt;p&gt;After meandering around with the frameworks I felt like I wanted to try something more stripped down. So I looked at micro sites and Hugo &lt;a href=&#34;https://gohugo.io/&#34;&gt;https://gohugo.io/&lt;/a&gt; stood out.  I figured I would know in a couple hours if it work work or not.&lt;/p&gt;

&lt;h1 id=&#34;hugo-quick-start:af5d620423bd53c36ac9d8e74d1bb8f8&#34;&gt;Hugo: Quick Start&lt;/h1&gt;

&lt;p&gt;Installing go is awesome on mac. If you have a mac and do not have &lt;a href=&#34;http://brew.sh/&#34;&gt;homebrew&lt;/a&gt; - shame on you.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;brew install go
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Installing hugo as awesome.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;brew install hugo
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Creating a new site was extremely simple.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;mkdir newsite
cd newsite
hugo new site .
hugo new about.md
hugo new post/first.md
git clone https://github.com/dim0627/hugo_theme_beg themes/beg
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Edit &lt;code&gt;config.yaml&lt;/code&gt; &amp;ndash; see my example
Add &lt;code&gt;theme = &amp;quot;beg&amp;quot;&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Start the serve:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;hugo server --buildDrafts --watch
&lt;/code&gt;&lt;/pre&gt;

&lt;h1 id=&#34;conclusion:af5d620423bd53c36ac9d8e74d1bb8f8&#34;&gt;Conclusion&lt;/h1&gt;

&lt;p&gt;This was very painless. I am kinda surprised. I was a little hesitant to get in here. Setting up virtual hosts and getting the code out there wasn&amp;rsquo;t elegant but wasn&amp;rsquo;t hard either. I just checked out my repo on the server.&lt;/p&gt;

&lt;p&gt;I am going to start transfering some of my other blogs to this when I have the chance. I might even do something sophisticated to the sites that are more or dynamic or colorful.&lt;/p&gt;

&lt;p&gt;Go Golang!&lt;/p&gt;
</description>
        </item>
      
    

  </channel>
</rss>
